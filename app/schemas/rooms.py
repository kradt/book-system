from pydantic import BaseModel, Field
from bson import ObjectId

from app.schemas.seats import Seat
from app.tools import PyObjectId


class Room(BaseModel):
    """
        :param seats: all places that generated by number of column and rows
        :param name: Name of room if it has
        :param columns: count of columns in the room
        :param rows: count of rows in the room
    """
    name: str | None = None
    seats: list[Seat] | None = None

    class Config:
        orm_mode = True


class RoomOutput(Room):
    id: PyObjectId = Field(default_factory=PyObjectId, alias="_id")

    class Config:
        allow_population_by_field_name = True
        arbitrary_types_allowed = True
        json_encoders = {ObjectId: str}
